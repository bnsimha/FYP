// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v6.30.2
// source: terrain.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TerrainTileRequest contains parameters for requesting a specific terrain tile
type TerrainTileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X          int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Z          int32 `protobuf:"varint,2,opt,name=z,proto3" json:"z,omitempty"`
	Resolution int32 `protobuf:"varint,3,opt,name=resolution,proto3" json:"resolution,omitempty"` // Points per side
	Lod        int32 `protobuf:"varint,4,opt,name=lod,proto3" json:"lod,omitempty"`               // Level of detail
}

func (x *TerrainTileRequest) Reset() {
	*x = TerrainTileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainTileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainTileRequest) ProtoMessage() {}

func (x *TerrainTileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainTileRequest.ProtoReflect.Descriptor instead.
func (*TerrainTileRequest) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{0}
}

func (x *TerrainTileRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *TerrainTileRequest) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *TerrainTileRequest) GetResolution() int32 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

func (x *TerrainTileRequest) GetLod() int32 {
	if x != nil {
		return x.Lod
	}
	return 0
}

// TerrainTileResponse contains the heightmap data for a terrain tile
type TerrainTileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X          int32  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Z          int32  `protobuf:"varint,2,opt,name=z,proto3" json:"z,omitempty"`
	Resolution int32  `protobuf:"varint,3,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Heightmap  []byte `protobuf:"bytes,4,opt,name=heightmap,proto3" json:"heightmap,omitempty"`                // Raw heightmap data as binary
	IsCached   bool   `protobuf:"varint,5,opt,name=is_cached,json=isCached,proto3" json:"is_cached,omitempty"` // Whether this tile was served from cache
	WorkerId   string `protobuf:"bytes,6,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`  // ID of worker that generated this tile
}

func (x *TerrainTileResponse) Reset() {
	*x = TerrainTileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainTileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainTileResponse) ProtoMessage() {}

func (x *TerrainTileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainTileResponse.ProtoReflect.Descriptor instead.
func (*TerrainTileResponse) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{1}
}

func (x *TerrainTileResponse) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *TerrainTileResponse) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *TerrainTileResponse) GetResolution() int32 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

func (x *TerrainTileResponse) GetHeightmap() []byte {
	if x != nil {
		return x.Heightmap
	}
	return nil
}

func (x *TerrainTileResponse) GetIsCached() bool {
	if x != nil {
		return x.IsCached
	}
	return false
}

func (x *TerrainTileResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

// TerrainChunkRequest requests multiple tiles at once
type TerrainChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterX    int32 `protobuf:"varint,1,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterZ    int32 `protobuf:"varint,2,opt,name=center_z,json=centerZ,proto3" json:"center_z,omitempty"`
	Radius     int32 `protobuf:"varint,3,opt,name=radius,proto3" json:"radius,omitempty"` // Number of tiles in each direction
	Resolution int32 `protobuf:"varint,4,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Lod        int32 `protobuf:"varint,5,opt,name=lod,proto3" json:"lod,omitempty"`
}

func (x *TerrainChunkRequest) Reset() {
	*x = TerrainChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainChunkRequest) ProtoMessage() {}

func (x *TerrainChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainChunkRequest.ProtoReflect.Descriptor instead.
func (*TerrainChunkRequest) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{2}
}

func (x *TerrainChunkRequest) GetCenterX() int32 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *TerrainChunkRequest) GetCenterZ() int32 {
	if x != nil {
		return x.CenterZ
	}
	return 0
}

func (x *TerrainChunkRequest) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *TerrainChunkRequest) GetResolution() int32 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

func (x *TerrainChunkRequest) GetLod() int32 {
	if x != nil {
		return x.Lod
	}
	return 0
}

// TerrainChunkResponse contains multiple terrain tiles
type TerrainChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tiles          []*TerrainTileResponse `protobuf:"bytes,1,rep,name=tiles,proto3" json:"tiles,omitempty"`
	TotalTiles     int32                  `protobuf:"varint,2,opt,name=total_tiles,json=totalTiles,proto3" json:"total_tiles,omitempty"`
	GeneratedTiles int32                  `protobuf:"varint,3,opt,name=generated_tiles,json=generatedTiles,proto3" json:"generated_tiles,omitempty"`
	CachedTiles    int32                  `protobuf:"varint,4,opt,name=cached_tiles,json=cachedTiles,proto3" json:"cached_tiles,omitempty"`
}

func (x *TerrainChunkResponse) Reset() {
	*x = TerrainChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainChunkResponse) ProtoMessage() {}

func (x *TerrainChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainChunkResponse.ProtoReflect.Descriptor instead.
func (*TerrainChunkResponse) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{3}
}

func (x *TerrainChunkResponse) GetTiles() []*TerrainTileResponse {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *TerrainChunkResponse) GetTotalTiles() int32 {
	if x != nil {
		return x.TotalTiles
	}
	return 0
}

func (x *TerrainChunkResponse) GetGeneratedTiles() int32 {
	if x != nil {
		return x.GeneratedTiles
	}
	return 0
}

func (x *TerrainChunkResponse) GetCachedTiles() int32 {
	if x != nil {
		return x.CachedTiles
	}
	return 0
}

// TerrainParametersRequest contains parameters for the noise generation
type TerrainParametersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scale       float32 `protobuf:"fixed32,1,opt,name=scale,proto3" json:"scale,omitempty"`
	Amplitude   float32 `protobuf:"fixed32,2,opt,name=amplitude,proto3" json:"amplitude,omitempty"`
	Octaves     int32   `protobuf:"varint,3,opt,name=octaves,proto3" json:"octaves,omitempty"`
	Persistence float32 `protobuf:"fixed32,4,opt,name=persistence,proto3" json:"persistence,omitempty"`
	Lacunarity  float32 `protobuf:"fixed32,5,opt,name=lacunarity,proto3" json:"lacunarity,omitempty"`
	Seed        int32   `protobuf:"varint,6,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *TerrainParametersRequest) Reset() {
	*x = TerrainParametersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainParametersRequest) ProtoMessage() {}

func (x *TerrainParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainParametersRequest.ProtoReflect.Descriptor instead.
func (*TerrainParametersRequest) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{4}
}

func (x *TerrainParametersRequest) GetScale() float32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *TerrainParametersRequest) GetAmplitude() float32 {
	if x != nil {
		return x.Amplitude
	}
	return 0
}

func (x *TerrainParametersRequest) GetOctaves() int32 {
	if x != nil {
		return x.Octaves
	}
	return 0
}

func (x *TerrainParametersRequest) GetPersistence() float32 {
	if x != nil {
		return x.Persistence
	}
	return 0
}

func (x *TerrainParametersRequest) GetLacunarity() float32 {
	if x != nil {
		return x.Lacunarity
	}
	return 0
}

func (x *TerrainParametersRequest) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

// TerrainParametersResponse confirms parameter updates
type TerrainParametersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TerrainParametersResponse) Reset() {
	*x = TerrainParametersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainParametersResponse) ProtoMessage() {}

func (x *TerrainParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainParametersResponse.ProtoReflect.Descriptor instead.
func (*TerrainParametersResponse) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{5}
}

func (x *TerrainParametersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TerrainParametersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// TerrainStreamRequest defines parameters for streaming terrain updates
type TerrainStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterX      int32 `protobuf:"varint,1,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterZ      int32 `protobuf:"varint,2,opt,name=center_z,json=centerZ,proto3" json:"center_z,omitempty"`
	ViewDistance int32 `protobuf:"varint,3,opt,name=view_distance,json=viewDistance,proto3" json:"view_distance,omitempty"`
	HighPriority bool  `protobuf:"varint,4,opt,name=high_priority,json=highPriority,proto3" json:"high_priority,omitempty"`
}

func (x *TerrainStreamRequest) Reset() {
	*x = TerrainStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terrain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainStreamRequest) ProtoMessage() {}

func (x *TerrainStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_terrain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainStreamRequest.ProtoReflect.Descriptor instead.
func (*TerrainStreamRequest) Descriptor() ([]byte, []int) {
	return file_terrain_proto_rawDescGZIP(), []int{6}
}

func (x *TerrainStreamRequest) GetCenterX() int32 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *TerrainStreamRequest) GetCenterZ() int32 {
	if x != nil {
		return x.CenterZ
	}
	return 0
}

func (x *TerrainStreamRequest) GetViewDistance() int32 {
	if x != nil {
		return x.ViewDistance
	}
	return 0
}

func (x *TerrainStreamRequest) GetHighPriority() bool {
	if x != nil {
		return x.HighPriority
	}
	return false
}

var File_terrain_proto protoreflect.FileDescriptor

var file_terrain_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x22, 0x62, 0x0a, 0x12, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x6f, 0x64, 0x22, 0xa9, 0x01, 0x0a,
	0x13, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x54, 0x65, 0x72,
	0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5a, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x6f, 0x64,
	0x22, 0xb7, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x54,
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x63, 0x74, 0x61, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x63,
	0x74, 0x61, 0x76, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x63, 0x75, 0x6e,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6c, 0x61, 0x63,
	0x75, 0x6e, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x4f, 0x0a, 0x19, 0x54,
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a,
	0x14, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x7a, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5a, 0x12, 0x23, 0x0a, 0x0d, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x32, 0xe6, 0x02, 0x0a, 0x0e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69,
	0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x69, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e,
	0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61,
	0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65,
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x1d, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69,
	0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e,
	0x54, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_terrain_proto_rawDescOnce sync.Once
	file_terrain_proto_rawDescData = file_terrain_proto_rawDesc
)

func file_terrain_proto_rawDescGZIP() []byte {
	file_terrain_proto_rawDescOnce.Do(func() {
		file_terrain_proto_rawDescData = protoimpl.X.CompressGZIP(file_terrain_proto_rawDescData)
	})
	return file_terrain_proto_rawDescData
}

var file_terrain_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_terrain_proto_goTypes = []interface{}{
	(*TerrainTileRequest)(nil),        // 0: terrain.TerrainTileRequest
	(*TerrainTileResponse)(nil),       // 1: terrain.TerrainTileResponse
	(*TerrainChunkRequest)(nil),       // 2: terrain.TerrainChunkRequest
	(*TerrainChunkResponse)(nil),      // 3: terrain.TerrainChunkResponse
	(*TerrainParametersRequest)(nil),  // 4: terrain.TerrainParametersRequest
	(*TerrainParametersResponse)(nil), // 5: terrain.TerrainParametersResponse
	(*TerrainStreamRequest)(nil),      // 6: terrain.TerrainStreamRequest
}
var file_terrain_proto_depIdxs = []int32{
	1, // 0: terrain.TerrainChunkResponse.tiles:type_name -> terrain.TerrainTileResponse
	0, // 1: terrain.TerrainService.GetTerrainTile:input_type -> terrain.TerrainTileRequest
	2, // 2: terrain.TerrainService.GetTerrainChunk:input_type -> terrain.TerrainChunkRequest
	4, // 3: terrain.TerrainService.UpdateTerrainParameters:input_type -> terrain.TerrainParametersRequest
	6, // 4: terrain.TerrainService.StreamTerrainUpdates:input_type -> terrain.TerrainStreamRequest
	1, // 5: terrain.TerrainService.GetTerrainTile:output_type -> terrain.TerrainTileResponse
	3, // 6: terrain.TerrainService.GetTerrainChunk:output_type -> terrain.TerrainChunkResponse
	5, // 7: terrain.TerrainService.UpdateTerrainParameters:output_type -> terrain.TerrainParametersResponse
	1, // 8: terrain.TerrainService.StreamTerrainUpdates:output_type -> terrain.TerrainTileResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_terrain_proto_init() }
func file_terrain_proto_init() {
	if File_terrain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_terrain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainTileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terrain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainTileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terrain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terrain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terrain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainParametersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terrain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainParametersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terrain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_terrain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_terrain_proto_goTypes,
		DependencyIndexes: file_terrain_proto_depIdxs,
		MessageInfos:      file_terrain_proto_msgTypes,
	}.Build()
	File_terrain_proto = out.File
	file_terrain_proto_rawDesc = nil
	file_terrain_proto_goTypes = nil
	file_terrain_proto_depIdxs = nil
}
