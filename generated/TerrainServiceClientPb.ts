/**
 * @fileoverview gRPC-Web generated client stub for terrain
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.30.2
// source: terrain.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as terrain_pb from './terrain_pb'; // proto import: "terrain.proto"


export class TerrainServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetTerrainTile = new grpcWeb.MethodDescriptor(
    '/terrain.TerrainService/GetTerrainTile',
    grpcWeb.MethodType.UNARY,
    terrain_pb.TerrainTileRequest,
    terrain_pb.TerrainTileResponse,
    (request: terrain_pb.TerrainTileRequest) => {
      return request.serializeBinary();
    },
    terrain_pb.TerrainTileResponse.deserializeBinary
  );

  getTerrainTile(
    request: terrain_pb.TerrainTileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<terrain_pb.TerrainTileResponse>;

  getTerrainTile(
    request: terrain_pb.TerrainTileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: terrain_pb.TerrainTileResponse) => void): grpcWeb.ClientReadableStream<terrain_pb.TerrainTileResponse>;

  getTerrainTile(
    request: terrain_pb.TerrainTileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: terrain_pb.TerrainTileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/terrain.TerrainService/GetTerrainTile',
        request,
        metadata || {},
        this.methodDescriptorGetTerrainTile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/terrain.TerrainService/GetTerrainTile',
    request,
    metadata || {},
    this.methodDescriptorGetTerrainTile);
  }

  methodDescriptorGetTerrainChunk = new grpcWeb.MethodDescriptor(
    '/terrain.TerrainService/GetTerrainChunk',
    grpcWeb.MethodType.UNARY,
    terrain_pb.TerrainChunkRequest,
    terrain_pb.TerrainChunkResponse,
    (request: terrain_pb.TerrainChunkRequest) => {
      return request.serializeBinary();
    },
    terrain_pb.TerrainChunkResponse.deserializeBinary
  );

  getTerrainChunk(
    request: terrain_pb.TerrainChunkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<terrain_pb.TerrainChunkResponse>;

  getTerrainChunk(
    request: terrain_pb.TerrainChunkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: terrain_pb.TerrainChunkResponse) => void): grpcWeb.ClientReadableStream<terrain_pb.TerrainChunkResponse>;

  getTerrainChunk(
    request: terrain_pb.TerrainChunkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: terrain_pb.TerrainChunkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/terrain.TerrainService/GetTerrainChunk',
        request,
        metadata || {},
        this.methodDescriptorGetTerrainChunk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/terrain.TerrainService/GetTerrainChunk',
    request,
    metadata || {},
    this.methodDescriptorGetTerrainChunk);
  }

  methodDescriptorUpdateTerrainParameters = new grpcWeb.MethodDescriptor(
    '/terrain.TerrainService/UpdateTerrainParameters',
    grpcWeb.MethodType.UNARY,
    terrain_pb.TerrainParametersRequest,
    terrain_pb.TerrainParametersResponse,
    (request: terrain_pb.TerrainParametersRequest) => {
      return request.serializeBinary();
    },
    terrain_pb.TerrainParametersResponse.deserializeBinary
  );

  updateTerrainParameters(
    request: terrain_pb.TerrainParametersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<terrain_pb.TerrainParametersResponse>;

  updateTerrainParameters(
    request: terrain_pb.TerrainParametersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: terrain_pb.TerrainParametersResponse) => void): grpcWeb.ClientReadableStream<terrain_pb.TerrainParametersResponse>;

  updateTerrainParameters(
    request: terrain_pb.TerrainParametersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: terrain_pb.TerrainParametersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/terrain.TerrainService/UpdateTerrainParameters',
        request,
        metadata || {},
        this.methodDescriptorUpdateTerrainParameters,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/terrain.TerrainService/UpdateTerrainParameters',
    request,
    metadata || {},
    this.methodDescriptorUpdateTerrainParameters);
  }

  methodDescriptorStreamTerrainUpdates = new grpcWeb.MethodDescriptor(
    '/terrain.TerrainService/StreamTerrainUpdates',
    grpcWeb.MethodType.SERVER_STREAMING,
    terrain_pb.TerrainStreamRequest,
    terrain_pb.TerrainTileResponse,
    (request: terrain_pb.TerrainStreamRequest) => {
      return request.serializeBinary();
    },
    terrain_pb.TerrainTileResponse.deserializeBinary
  );

  streamTerrainUpdates(
    request: terrain_pb.TerrainStreamRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<terrain_pb.TerrainTileResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/terrain.TerrainService/StreamTerrainUpdates',
      request,
      metadata || {},
      this.methodDescriptorStreamTerrainUpdates);
  }

}

